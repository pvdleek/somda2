{% extends('base.html.twig') %}

{% block content %}
    <div class="panel">
        <div class="panel-title">Mijn spots</div>
        <div class="panel-content">
            <table class="nowrap" id="my_spots_table">
                <thead>
                    <tr>
                        <th><input name="select_all" type="checkbox" value="1" /></th>
                        <th>Spot-datum</th>
                        <th>Materieel</th>
                        <th>Treinnummer</th>
                        <th>Spot-locatie</th>
                        <th>Extra</th>
                        <th>Verborgen informatie</th>
                        <th>&nbsp;</th>
                    </tr>
                </thead>
                <tbody></tbody>
                <tfoot>
                    <tr>
                        <th>&nbsp;</th>
                        <th>datum</th>
                        <th>materieel</th>
                        <th>trein</th>
                        <th>locatie</th>
                        <th>&nbsp;</th>
                        <th>&nbsp;</th>
                        <th>&nbsp;</th>
                    </tr>
                </tfoot>
            </table>

            <br />Met geselecteerde spots:
            <a class="somda-button" href="#" id="my_spots_bulk_edit_date">Datum aanpassen</a>
            <a class="somda-button" href="#" id="my_spots_bulk_edit_location">Locatie aanpassen</a>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script src="https://cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js"></script>
    <script src="{{ asset('js/dateFormat-2019-08-01.js') }}?version={{ 'js/dateFormat-2019-08-01.js'|fileTimestamp }}"></script>
    <script>
        let rowsSelected = [];

        /**
         * @param {int} id
         */
        function editSpot(id)
        {
            document.location = '{{ path('my_spots_edit', { 'id': 1234 }) }}'.replace('/1234/', '/' + id + '/');
        }

        /**
         * @param {int} id
         */
        function deleteSpot(id)
        {
            if (confirm('Weet je zeker dat je deze spot wilt verwijderen?')) {
                document.location = '{{ path('my_spots_delete', { 'id': 1234 }) }}'.replace('/1234/', '/' + id + '/');
            }
        }

        function updateDataTableSelectAllCtrl(table)
        {
            table = table.table().node();
            let checkboxAll = $('tbody input[type="checkbox"]', table);
            let checkboxChecked = $('tbody input[type="checkbox"]:checked', table);
            let checkboxSelectAll  = $('thead input[name="select_all"]', table).get(0);

            if (checkboxChecked.length === 0) {
                // None of the checkboxes are checked
                checkboxSelectAll.checked = false;
                if ('indeterminate' in checkboxSelectAll) {
                    checkboxSelectAll.indeterminate = false;
                }
            } else if (checkboxChecked.length === checkboxAll.length) {
                // All of the checkboxes are checked
                checkboxSelectAll.checked = true;
                if ('indeterminate' in checkboxSelectAll) {
                    checkboxSelectAll.indeterminate = false;
                }
            } else {
                // Some of the checkboxes are checked
                checkboxSelectAll.checked = true;
                if ('indeterminate' in checkboxSelectAll) {
                    checkboxSelectAll.indeterminate = true;
                }
            }
        }

        $(document).ready(function() {
            $('#my_spots_table tfoot th').each(function () {
                const title = $(this).text();
                if (title.length > 1) {
                    $(this).html('<input id="filter_' + title + '" placeholder="Zoek een ' + title + '" size="10" type="text" />');
                }
            });
            $('#filter_datum').datepicker({
                closeText: 'Sluiten',
                constrainInput: true,
                currentText: 'Vandaag',
                dateFormat: 'dd-mm-yy',
                dayNames: ['Zondag', 'Maandag', 'Dinsdag', 'Woensdag', 'Donderdag', 'Vrijdag', 'Zaterdag'],
                dayNamesMin: ['zo', 'ma', 'di', 'wo', 'do', 'vr', 'za'],
                dayNamesShort: ['Zon', 'Maa', 'Din', 'Woe', 'Don', 'Vri', 'Zat'],
                firstDay: 1,
                maxDate: '+0',
                monthNames: ['januari', 'februari', 'maart', 'april', 'mei', 'juni', 'juli', 'augustus', 'september', 'oktober', 'november', 'december'],
                monthNamesShort: ['jan', 'feb', 'mar', 'apr', 'mei', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'dec'],
                nextText: 'Volgende maand',
                prevText: 'Vorige maand',
                showButtonPanel: true,
            });

            let mySpotsTable = $('#my_spots_table').DataTable({
                'ajax': '{{ path('my_spots_json') }}',
                'columnDefs': [
                    {
                        'className': 'dt-body-center',
                        'data': null,
                        'render': function() {
                            return '<input type="checkbox" />';
                        },
                        'sortable': false,
                        'targets': 0,
                    },
                    {
                        'render': function (data) {
                            return DateFormat.format.date(data.date, 'dd-MM-yyyy');
                        },
                        'targets': 1,
                    },
                    {
                        'render': function (data, type, row) {
                            if (row['position'].length > 0) {
                                return data + '(' + row['position'] + ')';
                            }
                            return data;
                        },
                        'targets': 3,
                    },
                    {
                        'render': function (data, type, row) {
                            return '<span title="' + row['location_description'] + '">' + data + '</span>';
                        },
                        'targets': 4,
                    },
                    {
                        'data': null,
                        'render': function (data, type, row) {
                            return '<a href="#" onclick="editSpot(' + row['id'] + '); return false;" title="Bewerk deze spot"><i class="fas fa-pen"></i></a>' +
                                ' <a href="#" onclick="deleteSpot(' + row['id'] + '); return false;" title="Verwijder deze spot"><i class="fas fa-trash-alt"></i></a>';
                        },
                        'sortable': false,
                        'targets': -1,
                    },
                ],
                'columns': [
                    { 'data': null },
                    { 'data': 'spot_date' },
                    { 'data': 'train' },
                    { 'data': 'route' },
                    { 'data': 'location' },
                    { 'data': 'extra' },
                    { 'data': 'user_extra' },
                    { 'data': null },
                ],
                initComplete: function () {
                    this.api().columns().every(function () {
                        let that = this;
                        $('input', this.footer()).on('keyup change clear', function () {
                            if (that.search() !== this.value) {
                                that.search(this.value).draw();
                            }
                        });
                    });
                },
                'language': {
                    'aria': {
                        'sortAscending': ': activeer om oplopend te sorteren',
                        'sortDescending': ': activeer om aflopend te sorteren'
                    },
                    'emptyTable': 'Geen spots gevonden',
                    'info': 'Toont pagina _PAGE_ van _PAGES_',
                    'infoEmpty': 'Geen spots gevonden',
                    'infoFiltered': '(gefilterd uit _MAX_ spots)',
                    'lengthMenu': 'Toon _MENU_ spots per pagina',
                    'loadingRecords': 'Laden ...',
                    'processing': 'Laden ...',
                    'search': 'Zoeken:',
                    'paginate': {
                        'first': 'Eerste',
                        'last': 'Laatste',
                        'next': 'Volgende',
                        'previous': 'Vorige',
                    },
                    'zeroRecords': 'Geen spots gevonden',
                },
                'order': [[1, 'DESC']],
                'processing': true,
                'rowCallback': function(row, data) {
                    if($.inArray(data.id, rowsSelected) !== -1) {
                        $(row).find('input[type="checkbox"]').prop('checked', true);
                        $(row).addClass('selected');
                    }
                },
                'serverSide': true,
                'stateSave': true,
            }).on('click', 'tbody td, thead th:first-child', function() {
                // Handle click on table cells with checkboxes
                $(this).parent().find('input[type="checkbox"]').trigger('click');
            });

            // Restore the saved state for the individual columns
            let state = mySpotsTable.state.loaded();
            if (state) {
                mySpotsTable.columns().eq(0).each(function (colIdx) {
                    const columnSearch = state.columns[colIdx].search;
                    if (columnSearch.search) {
                        $('input', mySpotsTable.column(colIdx).footer()).val(columnSearch.search);
                    }
                });
                mySpotsTable.draw();
            }

            // Handle click on checkbox
            $('#my_spots_table tbody').on('click', 'input[type="checkbox"]', function(e) {
                let row = $(this).closest('tr');
                let data = mySpotsTable.row(row).data();

                // Determine whether row ID is in the list of selected row IDs
                let index = $.inArray(data.id, rowsSelected);
                if (this.checked && index === -1) {
                    // Checkbox is checked and row ID is not in list of selected row IDs
                    rowsSelected.push(data.id);
                } else if (!this.checked && index !== -1) {
                    // Checkbox is not checked and row ID is in list of selected row IDs
                    rowsSelected.splice(index, 1);
                }

                if (this.checked) {
                    row.addClass('selected');
                } else {
                    row.removeClass('selected');
                }

                // Update state of "Select all" control
                updateDataTableSelectAllCtrl(mySpotsTable);

                // Prevent click event from propagating to parent
                e.stopPropagation();
            });

            // Handle click on "Select all" control
            $('thead input[name="select_all"]', mySpotsTable.table().container()).on('click', function(e) {
                if (this.checked) {
                    $('#my_spots_table tbody input[type="checkbox"]:not(:checked)').trigger('click');
                } else {
                    $('#my_spots_table tbody input[type="checkbox"]:checked').trigger('click');
                }

                // Prevent click event from propagating to parent
                e.stopPropagation();
            });

            mySpotsTable.on('draw', function() {
                // Update state of "Select all" control
                updateDataTableSelectAllCtrl(mySpotsTable);
            });

            $('#my_spots_bulk_edit_date').on('click', function () {
                document.location = '{{ path('my_spots_bulk_edit_date', { 'id_list': '1234' }) }}'.replace('/1234/', '/' + rowsSelected.join(',') + '/');
            });
            $('#my_spots_bulk_edit_location').on('click', function () {
                document.location = '{{ path('my_spots_bulk_edit_location', { 'id_list': '1234' }) }}'.replace('/1234/', '/' + rowsSelected.join(',') + '/');
            });
        });
    </script>
{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.21/css/jquery.dataTables.min.css" type="text/css" />
{% endblock %}
